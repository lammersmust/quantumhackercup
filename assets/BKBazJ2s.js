import{_ as r}from"./Bvl5YsI0.js";import{_ as i}from"./D2FOu4hU.js";import{_ as a,n as u,w as e,u as m,o as p,a as t,b as f,P as b}from"./BUXv2e4z.js";import"./BJzL2lT2.js";const w={};function d(o,n){const l=r,s=i;return p(),u(s,{title:"Problem B: Prime Subtractorization",points:("PROBLEMS_POINTS"in o?o.PROBLEMS_POINTS:m(b)).B},{default:e(()=>[n[2]||(n[2]=t("p",null," A positive integer is an N-subtractorization if it is a prime number that can be expressed as the difference of two primes that are both at most N. For example, the complete set of 5-subtractorizations is {2,3} because 5−3=2 and 5−2=3. ",-1)),n[3]||(n[3]=t("p",null,"For a given N, how many N-subtractorizations are there?",-1)),n[4]||(n[4]=t("h2",null,"Constraints",-1)),n[5]||(n[5]=t("p",null,[t("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[t("semantics",null,[t("mrow",null,[t("mn",null,"1"),t("mo",null,"≤"),t("mi",null,"T"),t("mo",null,"≤"),t("mn",null,"100")]),t("annotation",{encoding:"application/x-tex"},"1 \\leq T \\leq 100")])]),t("br"),t("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[t("semantics",null,[t("mrow",null,[t("mn",null,"1"),t("mo",null,"≤"),t("mi",null,"N"),t("mo",null,"≤"),t("mn",null,"10"),t("mo",{separator:"true",lspace:"0em",rspace:"0em"},","),t("mn",null,"000"),t("mo",{separator:"true",lspace:"0em",rspace:"0em"},","),t("mn",null,"000")]),t("annotation",{encoding:"application/x-tex"},"1 \\leq N \\leq 10{,}000{,}000")])])],-1)),n[6]||(n[6]=t("h2",null,"Input Format",-1)),n[7]||(n[7]=t("p",null," Input begins with an integer T, the number of test cases. Each case is a single line that contains the integer N. ",-1)),n[8]||(n[8]=t("h2",null,"Output Format",-1)),n[9]||(n[9]=t("p",null,' For the ith test case, print "Case #i: " followed by a single integer, the number of N-subtractorizations. ',-1)),n[10]||(n[10]=t("h2",null,"Sample Explanation",-1)),n[11]||(n[11]=t("p",null,"The first case is explained above.",-1)),n[12]||(n[12]=t("p",null,"In the second case, the complete set of 8-subtractorizations is {2,3,5}.",-1)),f(l,null,{input:e(()=>n[0]||(n[0]=[t("pre",null,`2
5
8`,-1)])),output:e(()=>n[1]||(n[1]=[t("pre",null,`Case #1: 2
Case #2: 3`,-1)])),_:1})]),_:1},8,["points"])}const M=a(w,[["render",d]]);export{M as default};
