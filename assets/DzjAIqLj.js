import{_ as r}from"./CsXgw3Wm.js";import{_ as a}from"./EKwLFbPh.js";import{_ as u,n as m,w as l,u as p,o as h,a as n,d as e,b as d,P as w}from"./BllL7jBv.js";import"./C1mGQBNe.js";const g={};function f(o,t){const i=r,s=a;return h(),m(s,{title:"Problem E: Wildcard Submissions",points:("PROBLEMS_POINTS"in o?o.PROBLEMS_POINTS:p(w)).E},{default:l(()=>[t[2]||(t[2]=n("p",null," A trie is a tree where every node represents a prefix of a string. When a string s is inserted into a trie, up to ∣s∣+1 nodes are created if they don't already exist: ",-1)),t[3]||(t[3]=n("ul",null,[n("li",null,"a node representing the empty string, '', which is always the root of the trie"),n("li",null,"a node representing the first character of s, which is a child of the root"),n("li",null," a node representing the first two characters of s, which is a child of the previous node "),n("li",null,"... and so on")],-1)),t[4]||(t[4]=n("p",null,[e(" You have N wildcard strings, "),n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("semantics",null,[n("mrow",null,[n("msub",null,[n("mi",null,"S"),n("mn",null,"1")])]),n("annotation",{encoding:"application/x-tex"},"S_1")])]),e(" through "),n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("semantics",null,[n("mrow",null,[n("msub",null,[n("mi",null,"S"),n("mi",null,"N")])]),n("annotation",{encoding:"application/x-tex"},"S_N")])]),e(" , which each consist of uppercase Latin letters and question marks. A wildcard string represents the set of all strings that you can create by replacing each question mark with some uppercase Latin letter. ")],-1)),t[5]||(t[5]=n("p",null," If you add every string represented by each of your wildcard strings to a single trie (initially empty), how many nodes will that trie have? Output this number modulo 998,244,353. ",-1)),t[6]||(t[6]=n("h2",null,"Constraints",-1)),t[7]||(t[7]=n("p",null,[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("semantics",null,[n("mrow",null,[n("mn",null,"1"),n("mo",null,"≤"),n("mi",null,"T"),n("mo",null,"≤"),n("mn",null,"105")]),n("annotation",{encoding:"application/x-tex"},"1 \\leq T \\leq 105")])]),n("br"),n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("semantics",null,[n("mrow",null,[n("mn",null,"1"),n("mo",null,"≤"),n("mi",null,"N"),n("mo",null,"≤"),n("mn",null,"25")]),n("annotation",{encoding:"application/x-tex"},"1 \\leq N \\leq 25")])]),n("br"),n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("semantics",null,[n("mrow",null,[n("mn",null,"1"),n("mo",null,"≤"),n("mi",{mathvariant:"normal"},"∣"),n("msub",null,[n("mi",null,"S"),n("mi",null,"i")]),n("mi",{mathvariant:"normal"},"∣"),n("mo",null,"≤"),n("mn",null,"100")]),n("annotation",{encoding:"application/x-tex"},"1 \\leq |S_i| \\leq 100")])])],-1)),t[8]||(t[8]=n("p",null,"All characters are uppercase Latin letters or question marks.",-1)),t[9]||(t[9]=n("h2",null,"Input Format",-1)),t[10]||(t[10]=n("p",null,[e(" Input begins with an integer T, the number of test cases. Each case begins with a line that contains the integer N. Then N lines follow, the ith of which contains the string "),n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("semantics",null,[n("mrow",null,[n("msub",null,[n("mi",null,"S"),n("mi",null,"i")])]),n("annotation",{encoding:"application/x-tex"},"S_i")])]),e(" . ")],-1)),t[11]||(t[11]=n("h2",null,"Output Format",-1)),t[12]||(t[12]=n("p",null,' For the ith test case, print "Case #i: " followed by the number of nodes in the resulting trie, modulo 998,244,353. ',-1)),t[13]||(t[13]=n("h2",null,"Sample Explanation",-1)),t[14]||(t[14]=n("p",null," In the first case, we insert the string META into the trie, creating 5 nodes: [ ' ', M, ME, MET, META ]. Inserting MATE would create the 5 nodes [ ' ', M, MA, MAT, MATE ], but those first 2 nodes already exist, so 3 new nodes are created. In the end we have 8 nodes. ",-1)),t[15]||(t[15]=n("p",null," In the second case, we insert the strings [ AB, BB, CB, ... ZB ] into the trie, which creates the 53 nodes [ ' ', A, AB, B, BB, ..., Z, ZB ]. When we add the string AC, that creates one new node, AC. ",-1)),t[16]||(t[16]=n("p",null,[e(" In the third case, we insert all combinations of 2 letters, giving us 1 node for the empty string, 26 nodes for the single letters, and "),n("code",null,"26 × 26 = 676"),e(" nodes for the pairs of letters, for a total of 703 nodes. ")],-1)),d(i,null,{input:l(()=>t[0]||(t[0]=[n("pre",null,`5
2
META
MATE
2
?B
AC
1
??
3
XXY
X?
?X
2
??M?E?T?A??
?M?E?T?A?`,-1)])),output:l(()=>t[1]||(t[1]=[n("pre",null,`Case #1: 8
Case #2: 54
Case #3: 703
Case #4: 79
Case #5: 392316013`,-1)])),_:1})]),_:1},8,["points"])}const E=u(g,[["render",f]]);export{E as default};
